volumes:
  ckan_storage:
  pg_data:
  solr_data:
  pip_cache:
  site_packages:
  vscode_server:
  minio_data:

services:
  ckan:
    # Use image from Raghava's dockerHub
    image: raghavaalajangi95/dcor-ckan:latest
    container_name: dcor_ckan
    env_file:
      docker-ci.env
    links:
      - db
      - solr
      - redis
      - minio
    # hostname is defined as a docker resource in `dcor_control`
    hostname: dcor-dev-docker
    ports:
      - "0.0.0.0:${CKAN_PORT_HOST}:5000"
    user: root # This will avoid permission errors
    volumes:
      - ckan_storage:/var/lib/ckan
      # Map current GitHub runner working dir as src_extensions dir within 
      # the container (this will allow us to access the ckanext-dcor_theme 
      # directly inside src_extensions)
      - ./:/srv/app/src_extensions
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.10/site-packages
      - vscode_server:/root/.vscode-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]

  datapusher:
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    container_name: datapusher
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]

  db:
    # Use image from Raghava's dockerHub
    image: raghavaalajangi95/dcor-postgresql:latest
    container_name: postgres
    env_file:
      - docker-ci.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
     
  solr:
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    container_name: solr
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  minio:
    # Use image from Raghava's dockerHub
    image: raghavaalajangi95/dcor-minio:latest
    container_name: minio
    restart: unless-stopped
    env_file:
      - docker-ci.env
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data-minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
